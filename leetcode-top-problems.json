[
  {
    "name": "4Sum",
    "description": "Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that: 0 <= a, b, c, d < n, a, b, c, and d are distinct, nums[a] + nums[b] + nums[c] + nums[d] == target",
    "topic": "Arrays",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/4sum/",
    "frequencyScore": 7,
    "tags": ["Array", "Two Pointers", "Sorting"],
    "patterns": ["Two Pointers", "N-Sum Pattern"],
    "averageTime": 30
  },
  {
    "name": "Merge Intervals",
    "description": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.",
    "topic": "Arrays",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft", "Facebook"],
    "url": "https://leetcode.com/problems/merge-intervals/",
    "frequencyScore": 9,
    "tags": ["Array", "Sorting"],
    "patterns": ["Interval Merging", "Sorting"],
    "averageTime": 20
  },
  {
    "name": "Insert Interval",
    "description": "You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.",
    "topic": "Arrays",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Facebook"],
    "url": "https://leetcode.com/problems/insert-interval/",
    "frequencyScore": 8,
    "tags": ["Array"],
    "patterns": ["Interval Processing"],
    "averageTime": 25
  },
  {
    "name": "Rotate Image",
    "description": "You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).",
    "topic": "Arrays",
    "difficulty": "Medium",
    "companies": ["Amazon", "Microsoft", "Apple"],
    "url": "https://leetcode.com/problems/rotate-image/",
    "frequencyScore": 7,
    "tags": ["Array", "Math", "Matrix"],
    "patterns": ["Matrix Manipulation"],
    "averageTime": 18
  },
  {
    "name": "Spiral Matrix",
    "description": "Given an m x n matrix, return all elements of the matrix in spiral order.",
    "topic": "Arrays",
    "difficulty": "Medium",
    "companies": ["Amazon", "Microsoft", "Google"],
    "url": "https://leetcode.com/problems/spiral-matrix/",
    "frequencyScore": 8,
    "tags": ["Array", "Matrix", "Simulation"],
    "patterns": ["Matrix Traversal"],
    "averageTime": 22
  },
  {
    "name": "Longest Common Prefix",
    "description": "Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string.",
    "topic": "Strings",
    "difficulty": "Easy",
    "companies": ["Amazon", "Google"],
    "url": "https://leetcode.com/problems/longest-common-prefix/",
    "frequencyScore": 6,
    "tags": ["String"],
    "patterns": ["String Processing"],
    "averageTime": 12
  },
  {
    "name": "Letter Combinations of a Phone Number",
    "description": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.",
    "topic": "Strings",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    "frequencyScore": 8,
    "tags": ["Hash Table", "String", "Backtracking"],
    "patterns": ["Backtracking", "DFS"],
    "averageTime": 20
  },
  {
    "name": "Generate Parentheses",
    "description": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.",
    "topic": "Strings",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/generate-parentheses/",
    "frequencyScore": 8,
    "tags": ["String", "Dynamic Programming", "Backtracking"],
    "patterns": ["Backtracking", "DFS"],
    "averageTime": 25
  },
  {
    "name": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.",
    "topic": "Linked Lists",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/add-two-numbers/",
    "frequencyScore": 9,
    "tags": ["Linked List", "Math", "Recursion"],
    "patterns": ["Linked List Traversal", "Math"],
    "averageTime": 20
  },
  {
    "name": "Copy List with Random Pointer",
    "description": "A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null.",
    "topic": "Linked Lists",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/copy-list-with-random-pointer/",
    "frequencyScore": 8,
    "tags": ["Hash Table", "Linked List"],
    "patterns": ["Hash Map", "Two Pass"],
    "averageTime": 25
  },
  {
    "name": "Construct Binary Tree from Preorder and Inorder Traversal",
    "description": "Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.",
    "topic": "Trees",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
    "frequencyScore": 8,
    "tags": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"],
    "patterns": ["Tree Construction", "Divide and Conquer"],
    "averageTime": 30
  },
  {
    "name": "Kth Smallest Element in a BST",
    "description": "Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree.",
    "topic": "Trees",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
    "frequencyScore": 8,
    "tags": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"],
    "patterns": ["Inorder Traversal", "BST Properties"],
    "averageTime": 18
  },
  {
    "name": "Path Sum II",
    "description": "Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum.",
    "topic": "Trees",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google"],
    "url": "https://leetcode.com/problems/path-sum-ii/",
    "frequencyScore": 7,
    "tags": ["Backtracking", "Tree", "Depth-First Search", "Binary Tree"],
    "patterns": ["DFS", "Backtracking", "Path Finding"],
    "averageTime": 22
  },
  {
    "name": "Combination Sum",
    "description": "Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.",
    "topic": "Backtracking",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/combination-sum/",
    "frequencyScore": 8,
    "tags": ["Array", "Backtracking"],
    "patterns": ["Backtracking", "DFS"],
    "averageTime": 25
  },
  {
    "name": "Permutations",
    "description": "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.",
    "topic": "Backtracking",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/permutations/",
    "frequencyScore": 9,
    "tags": ["Array", "Backtracking"],
    "patterns": ["Backtracking", "DFS"],
    "averageTime": 20
  },
  {
    "name": "Subsets",
    "description": "Given an integer array nums of unique elements, return all possible subsets (the power set).",
    "topic": "Backtracking",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/subsets/",
    "frequencyScore": 8,
    "tags": ["Array", "Backtracking", "Bit Manipulation"],
    "patterns": ["Backtracking", "Bit Manipulation"],
    "averageTime": 18
  },
  {
    "name": "Jump Game",
    "description": "You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.",
    "topic": "Greedy",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/jump-game/",
    "frequencyScore": 8,
    "tags": ["Array", "Dynamic Programming", "Greedy"],
    "patterns": ["Greedy", "DP"],
    "averageTime": 15
  },
  {
    "name": "Jump Game II",
    "description": "Given an array of non-negative integers nums, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position.",
    "topic": "Greedy",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/jump-game-ii/",
    "frequencyScore": 8,
    "tags": ["Array", "Dynamic Programming", "Greedy"],
    "patterns": ["Greedy", "BFS"],
    "averageTime": 20
  },
  {
    "name": "Meeting Rooms",
    "description": "Given an array of meeting time intervals where intervals[i] = [starti, endi], determine if a person could attend all meetings.",
    "topic": "Intervals",
    "difficulty": "Easy",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/meeting-rooms/",
    "frequencyScore": 7,
    "tags": ["Array", "Sorting"],
    "patterns": ["Interval Processing", "Sorting"],
    "averageTime": 10
  },
  {
    "name": "Meeting Rooms II",
    "description": "Given an array of meeting time intervals intervals where intervals[i] = [starti, endi], return the minimum number of conference rooms required.",
    "topic": "Intervals",
    "difficulty": "Medium",
    "companies": ["Amazon", "Google", "Microsoft"],
    "url": "https://leetcode.com/problems/meeting-rooms-ii/",
    "frequencyScore": 9,
    "tags": ["Array", "Two Pointers", "Greedy", "Sorting", "Heap"],
    "patterns": ["Heap", "Interval Processing"],
    "averageTime": 25
  }
]
